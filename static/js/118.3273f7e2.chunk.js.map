{"version":3,"file":"static/js/118.3273f7e2.chunk.js","mappings":"yPAEaA,EAAOC,EAAAA,GAAAA,GAAH,uGAOJC,EAAMD,EAAAA,GAAAA,GAAF,8DAKJE,EAAOF,EAAAA,GAAAA,EAAH,6CAIJG,EAASH,EAAAA,GAAAA,OAAH,4GClBNI,EAAc,SAAAC,GAAK,OAAIA,EAAMC,SAASC,KAAnB,EAEnBC,EAAY,SAAAH,GAAK,OAAIA,EAAMI,MAAV,EAEjBC,EAAgB,SAAAL,GAAK,OAAIA,EAAMM,MAAMC,OAAhB,E,oBCCrBC,EAAe,WAE1B,IAAMC,GAAWC,EAAAA,EAAAA,MAEXT,GAAWU,EAAAA,EAAAA,IAAYC,GACvBR,GAASO,EAAAA,EAAAA,IAAYC,GAc3B,OACE,8BACGX,EAASY,OAAS,IACf,SAACnB,EAAD,WAdFU,GAAUA,EAAOS,OAAS,EACrBZ,EAASG,QAAO,SAAAU,GAAO,OAC5BA,EAAQC,KAAKC,oBAAoBC,SAASb,EAAOY,oBADrB,IAKzBf,GASuBiB,KAAI,SAAAJ,GAAO,OAC/B,UAAClB,EAAD,YACE,UAACC,EAAD,WACGiB,EAAQC,KADX,MACoBD,EAAQK,UAE5B,SAACrB,EAAD,CACEsB,QAAS,kBAZHC,EAYsBP,EAAQO,GAZxBZ,EAASa,EAAAA,GAAyBD,IAAxC,IAAAA,CAYG,EADX,sBAJSP,EAAQO,GADY,OAgB5C,EC1CYE,EAAY5B,EAAAA,GAAAA,KAAH,sIAST6B,EAAQ7B,EAAAA,GAAAA,MAAH,yDAKL8B,EAAQ9B,EAAAA,GAAAA,MAAH,yFAMLG,EAASH,EAAAA,GAAAA,OAAH,uJClBN+B,EAAgB,WAE3B,IAAMjB,GAAWC,EAAAA,EAAAA,MAiBjB,OAEE,UAACa,EAAD,CAAWI,aAAa,MAAMC,SAjBX,SAAAC,GAEnBA,EAAEC,iBACF,IAAMC,EAAOF,EAAEG,cAEfvB,EACEa,EAAAA,GAAsB,CACpBP,KAAMgB,EAAKE,SAASlB,KAAKmB,MACzBf,MAAOY,EAAKE,SAASE,OAAOD,SAIhCH,EAAKK,OACN,EAIC,WACI,UAACX,EAAD,CAAOY,QAAQ,OAAf,kBAEE,SAACb,EAAD,CACEc,KAAK,OACLvB,KAAK,OACLwB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,QAGZ,UAAChB,EAAD,CAAOY,QAAQ,SAAf,oBAEE,SAACb,EAAD,CACEc,KAAK,MACLvB,KAAK,SACLwB,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,QAGZ,SAAC,EAAD,CAAQH,KAAK,SAAb,2BAGP,ECzCc,SAASI,IACpB,IAAMjC,GAAWC,EAAAA,EAAAA,MACXiC,GAAYhC,EAAAA,EAAAA,IAAYN,GAM9B,OAJAuC,EAAAA,EAAAA,YAAU,WACNnC,GAASoC,EAAAA,EAAAA,MACZ,GAAE,CAACpC,KAGA,iCACI,SAACqC,EAAA,EAAD,WACI,gDAEJ,SAACpB,EAAD,KACA,yBAAMiB,GAAa,4BACnB,SAACnC,EAAD,MAGX,C","sources":["components/ContactsList/ContactsList.styled.js","redux/contacts/selectors.js","components/ContactsList/ContactsList.jsx","components/PhonebookForm/PhonebookForm.styled.js","components/PhonebookForm/PhonebookForm.jsx","pages/Contacts.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const List = styled.ul`\ndisplay: flex;\nflex-direction: column;\nmargin-left:15px;\nlist-style: disc;\n`;\n\nexport const Item= styled.li`\ndisplay: flex;\nmargin-bottom: 15px;\n`;\n\nexport const Text = styled.p`\nmargin-right: 10px;\n`;\n\nexport const Button = styled.button`\nwidth: 60px;\nbackground-color: transparent;\nborder-radius: 5px;\ncursor:pointer;\n`;","export const getContacts = state => state.contacts.items;\n\nexport const getFilter = state => state.filter;\n\nexport const selectLoading = state => state.tasks.loading;","import { useDispatch, useSelector } from 'react-redux';\nimport { List, Item, Text, Button } from './ContactsList.styled';\nimport * as selectors from 'redux/contacts/selectors';\nimport * as operations from 'redux/contacts/operations';\n\nexport const ContactsList = () => {\n  \n  const dispatch = useDispatch();\n\n  const contacts = useSelector(selectors.getContacts);\n  const filter = useSelector(selectors.getFilter);\n\n  const getVisibleContacts = () => {\n    if (filter && filter.length > 0) {\n      return contacts.filter(contact =>\n        contact.name.toLocaleLowerCase().includes(filter.toLocaleLowerCase())\n      );\n    }\n\n    return contacts;\n  };\n \n   const handleDelete = id => dispatch(operations.deleteContact(id));\n\n  return (\n    <>\n      {contacts.length > 0 && (\n          <List>\n            {getVisibleContacts().map(contact => (\n              <Item key={contact.id}>\n                <Text>\n                  {contact.name} : {contact.phone}\n                </Text>\n                <Button\n                  onClick={() => handleDelete(contact.id)}\n                >\n                  Delete\n                </Button>\n              </Item>\n            ))}\n          </List>\n        )}\n    </>\n  );\n};;\n\n\n","import styled from 'styled-components';\n\nexport const FormPhone = styled.form`\ndisplay: flex;\nflex-direction: column;\ngap:16px;\nborder: 1px solid black;\nwidth:40%;\nmargin-left: 15px;\n`;\n\nexport const Input = styled.input`\nmargin-top: 5px;\nwidth: 200px;\n`;\n\nexport const Label = styled.label`\ndisplay: flex;\nflex-direction: column;\nmargin: 15px 0 0 15px;\n`;\n\nexport const Button = styled.button`\nwidth: 100px;\nmargin-left: 15px;\nmargin-bottom: 15px;\nbackground-color: transparent;\nborder-radius: 5px;\ncursor:pointer;\n`;","import { useDispatch } from 'react-redux';\nimport { Button, Input, Label, FormPhone } from './PhonebookForm.styled';\nimport * as operations from 'redux/contacts/operations';\n\nexport const PhonebookForm = () => {\n\n  const dispatch = useDispatch();\n\n  const handleSubmit = e => {\n    \n    e.preventDefault();\n    const form = e.currentTarget;\n    \n    dispatch(\n      operations.addContact({\n        name: form.elements.name.value,\n        phone: form.elements.number.value,\n      })\n    );\n\n    form.reset();\n  };\n\n  return (\n   \n    <FormPhone autoComplete=\"off\" onSubmit={handleSubmit}>\n        <Label htmlFor=\"name\">\n          Name\n          <Input\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </Label>\n        <Label htmlFor=\"number\">\n          Number\n          <Input\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n          </Label>\n        <Button type=\"submit\">Add contact</Button>\n      </FormPhone>\n    );\n};\n\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { ContactsList } from 'components/ContactsList/ContactsList';\nimport { PhonebookForm } from 'components/PhonebookForm/PhonebookForm';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { selectLoading } from 'redux/contacts/selectors';\n\nexport default function Contacts() {\n    const dispatch = useDispatch();\n    const isLoading = useSelector(selectLoading);\n\n    useEffect(() => {\n        dispatch(fetchContacts());\n    }, [dispatch]);\n\n    return (\n        <>\n            <Helmet>\n                <title>Your contacts</title>\n            </Helmet>\n            <PhonebookForm />\n            <div>{isLoading && 'Request in progress...'}</div>\n            <ContactsList />\n        </>\n    );\n}\n"],"names":["List","styled","Item","Text","Button","getContacts","state","contacts","items","getFilter","filter","selectLoading","tasks","loading","ContactsList","dispatch","useDispatch","useSelector","selectors","length","contact","name","toLocaleLowerCase","includes","map","phone","onClick","id","operations","FormPhone","Input","Label","PhonebookForm","autoComplete","onSubmit","e","preventDefault","form","currentTarget","elements","value","number","reset","htmlFor","type","pattern","title","required","Contacts","isLoading","useEffect","fetchContacts","Helmet"],"sourceRoot":""}